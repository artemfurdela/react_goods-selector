{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGoods","isOrAre","length","this","className","toString","type","onClick","setState","hidden","goodsFromServer","map","good","ClassNames","includes","prevState","filter","x","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCAWA,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,EAKEC,QAAU,WACR,OAA2C,IAApC,EAAKF,MAAMC,cAAcE,OAC5B,KACA,OARR,4CAWE,WAAU,IAAD,OACCF,EAAkBG,KAAKJ,MAAvBC,cAER,OACE,uBAAMI,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SAC4B,IAAzBJ,EAAcE,OACX,oBADH,UAEMF,EAAcK,WAFpB,YAEkCF,KAAKF,UAFvC,eAKH,wBACEK,KAAK,SACLF,UAAU,aACVG,QAAS,kBAAM,EAAKC,SAAS,CAAER,cAAe,MAC9CS,OAAiC,IAAzBT,EAAcE,OAJxB,sBAUF,6BACGQ,EAAgBC,KAAI,SAAAC,GAAI,OACvB,qBACER,UAAWS,IACT,OACA,CAAE,eAAgBb,EAAcc,SAASF,KAH7C,UAMGA,EACD,wBACEN,KAAK,SACLF,UAAU,eACVG,QAAS,kBAAM,EAAKC,UAAS,SAACO,GAC5B,MAAO,CACLf,cAAc,GAAD,mBAAMe,EAAUf,eAAhB,CAA+BY,SAGhDH,OAAQT,EAAcc,SAASF,GARjC,oBAaA,wBACEN,KAAK,SACLF,UAAU,eACVG,QAAS,kBAAM,EAAKC,SAAS,CAC3BR,cAAeA,EAAcgB,QAAO,SAAAC,GAAC,OAAIA,IAAML,QAEjDH,QAAST,EAAcc,SAASF,GANlC,mCAvDd,GAAyBM,aCPzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed57a022.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import { Component } from 'react';\nimport ClassNames from 'classnames';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGoods: string[],\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  isOrAre = () => {\n    return this.state.selectedGoods.length === 1\n      ? 'is'\n      : 'are';\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {selectedGoods.length === 0\n              ? 'No goods selected'\n              : `${selectedGoods.toString()} ${this.isOrAre()} selected`}\n          </h1>\n\n          <button\n            type=\"button\"\n            className=\"App__clear\"\n            onClick={() => this.setState({ selectedGoods: [] })}\n            hidden={selectedGoods.length === 0}\n          >\n            Clear\n          </button>\n        </header>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              className={ClassNames(\n                'Good',\n                { 'Good--active': selectedGoods.includes(good) },\n              )}\n            >\n              {good}\n              <button\n                type=\"button\"\n                className=\"Good__select\"\n                onClick={() => this.setState((prevState) => {\n                  return {\n                    selectedGoods: [...prevState.selectedGoods, good],\n                  };\n                })}\n                hidden={selectedGoods.includes(good)}\n              >\n                Select\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"Good__remove\"\n                onClick={() => this.setState({\n                  selectedGoods: selectedGoods.filter(x => x !== good),\n                })}\n                hidden={!selectedGoods.includes(good)}\n              >\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}